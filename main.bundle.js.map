{"version":3,"sources":["C:/Users/Giusti/Projects/chatbot/src/$_gendir lazy","C:/Users/Giusti/Projects/chatbot/src/app/app.component.css","C:/Users/Giusti/Projects/chatbot/src/app/app.component.html","C:/Users/Giusti/Projects/chatbot/src/app/app.component.ts","C:/Users/Giusti/Projects/chatbot/src/app/app.module.ts","C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.css","C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.html","C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","C:/Users/Giusti/Projects/chatbot/src/app/chat/chat.module.ts","C:/Users/Giusti/Projects/chatbot/src/app/chat/chat.service.ts","C:/Users/Giusti/Projects/chatbot/src/environments/environment.ts","C:/Users/Giusti/Projects/chatbot/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Giusti/Projects/chatbot/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Giusti/Projects/chatbot/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<chat-dialog></chat-dialog>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Giusti/Projects/chatbot/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChatModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/app/app.module.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\r\\n    border-radius: 50px;\\r\\n    margin: 0 15px 10px;\\r\\n    padding: 15px 20px;\\r\\n    position: relative;\\r\\n    font-weight: bold;\\r\\n}\\r\\n.message.to {\\r\\n    background-color: #2095FE;\\r\\n    color: #fff;\\r\\n    margin-left: 100px;\\r\\n    text-align: right;\\r\\n}\\r\\n.message.from {\\r\\n    background-color: #E5E4E9;\\r\\n    color: #363636;\\r\\n    margin-right: 100px;\\r\\n}\\r\\n.message.to + .message.to,\\r\\n.message.from + .message.from {\\r\\nmargin-top: -10px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.css\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.css\n// module chunks = main","module.exports = \"<h1>Angular Bot</h1>\\n\\n\\n\\n\\n\\n<ng-container *ngFor=\\\"let message of messages | async\\\">\\n\\n  <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.sentBy === 'bot', 'to': message.sentBy === 'user' }\\\">\\n    {{message.content}}\\n  </div>\\n</ng-container>\\n\\n\\n<label for=\\\"nameField\\\">Your Message</label>\\n\\n<input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\"><br>\\n\\n<button (click)=\\\"sendMessage()\\\">Send</button>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.html\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.html\n// module chunks = main","import { Observable } from 'rxjs/Observable';\nimport { Component, OnInit } from '@angular/core';\nimport { ChatService, Message} from '../chat.service';\nimport 'rxjs/add/operator/scan';\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.css']\n})\nexport class ChatDialogComponent implements OnInit {\n\n  messages: Observable<Message[]>;\n  formValue: string;\n\n  constructor(private chat: ChatService) { }\n\n  ngOnInit() {\n    this.messages = this.chat.conversation.asObservable()\n      .scan((acc, val) => acc.concat(val));\n    this.chat.talk();\n  }\n\n  sendMessage() {\n    this.chat.converse(this.formValue);\n    this.formValue = '';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/app/chat/chat-dialog/chat-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ChatService } from './chat.service';\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [ChatDialogComponent],\n  exports: [ ChatDialogComponent ],\n  providers: [ChatService]\n})\nexport class ChatModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/app/chat/chat.module.ts","import { environment } from './../../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { ApiAiClient } from 'api-ai-javascript';\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nexport class Message {\n  constructor(public content: string, public sentBy: string) {}\n}\n\n@Injectable()\nexport class ChatService {\n\n  readonly token = environment.dialogflow.angularBot;\n  readonly client = new ApiAiClient({accessToken: this.token});\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n  constructor() { }\n\n  update(msg: Message){\n    this.conversation.next([msg]);\n  }\n\n  converse(msg: string){\n    const userMessage = new Message(msg, 'user');\n    this.update(userMessage);\n\n    return this.client.textRequest(msg)\n          .then(res => {\n            const speech = res.result.fulfillment.speech;\n            const botMessage = new Message(speech, 'bot');\n            this.update(botMessage);\n          });\n  }\n\n  talk() {\n    this.client.textRequest('Who are you?')\n      .then(res => console.log(res));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/app/chat/chat.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n\n  dialogflow: {\n    angularBot: '3f6fe6dbc95946b6aef5cd93646f83e7'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/Giusti/Projects/chatbot/src/main.ts"],"sourceRoot":"webpack:///"}